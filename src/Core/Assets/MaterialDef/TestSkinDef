// 测试Skin
Def TestSkinDef{
    Params{
        vec4 color;
        sampler2D colorMap;
    }
    SubTechnology Skin{
        Vars{
            vec4 wordPosition;
            vec2 uv0;
        }
        Vs_Shader{
            void main(){

                #ifdef Context.Skins
                    mat4 skinMat =
                            Context.InWeight0.x * Context.Joints[int(Context.InJoint0.x)] +
                            Context.InWeight0.y * Context.Joints[int(Context.InJoint0.y)] +
                            Context.InWeight0.z * Context.Joints[int(Context.InJoint0.z)] +
                            Context.InWeight0.w * Context.Joints[int(Context.InJoint0.w)];
                    Context.OutPosition = Context.ProjectMatrix * Context.ViewMatrix * Context.ModelMatrix * skinMat * vec4(Context.InPosition, 1.0f);
                #else
                    Context.OutPosition = Context.ProjectMatrix * Context.ViewMatrix * Context.ModelMatrix * vec4(Context.InPosition, 1.0f);
                #endif

                wordPosition = Context.OutPosition;
                uv0 = Context.InUv0;
            }
        }
        Fs_Shader{
            void main(){
                // 使用自定义颜色输出
                #ifdef Params.color
                    Context.OutColor = Params.color;
                #else
                    // 使用纹理
                    #ifdef Params.colorMap
                        Context.OutColor = texture(Params.colorMap, uv0);
                    #else
                        Context.OutColor = vec4(1.0f, 1.0f, 1.0f, 1.0f);
                    #endif
                #endif
            }
        }
    }
    Technology{
        Sub_Pass{
            Pass Skin{
            }
        }
    }
}
