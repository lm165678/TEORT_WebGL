// 将环境捕捉数据渲染并查看
// 同时,也支持将IBL作为SkyEnv进行场景环境渲染
Def EnvCaptureOutDef{
    Params{
        samplerCube envCaptureMap;
        float lod;
    }
    SubTechnology EnvCaptureOut{
        Vars{
            vec3 wPosition;
        }
        Vs_Shader{
            void main(){
                wPosition = Context.InPosition;
                Context.OutPosition = Context.ProjectMatrix * Context.ViewMatrix * Context.ModelMatrix * vec4(Context.InPosition, 1.0f);
            }
        }
        Fs_Shader{
            void main(){
                #ifdef Params.envCaptureMap
                    #ifdef Params.lod
                        Context.OutColor = textureLod(Params.envCaptureMap, normalize(wPosition), Params.lod);
                    #else
                        Context.OutColor = texture(Params.envCaptureMap, normalize(wPosition));
                    #endif
                #else
                    Context.OutColor = vec4(1.0f);
                #endif
            }
        }
    }
    SubTechnology EnvSkyOut{
        Vars{
            vec3 wPosition;
        }
        Vs_Shader{
            void main(){
                wPosition = Context.InPosition;
                // 只需要旋转部分
                vec4 pos = Context.ViewMatrix * vec4(Context.InPosition, 0.0f);
                // 应用投影变换
                pos.w = 1.0f;
                pos = Context.ProjectMatrix * pos;
                Context.OutPosition = pos.xyww;
            }
        }
        Fs_Shader{
            void main(){
                #ifdef Params.envCaptureMap
                    #ifdef Params.lod
                        Context.OutColor = textureLod(Params.envCaptureMap, normalize(wPosition), Params.lod);
                    #else
                        Context.OutColor = texture(Params.envCaptureMap, normalize(wPosition));
                    #endif
                #else
                    Context.OutColor = vec4(1.0f);
                #endif
            }
        }
    }
    Technology{
        Sub_Pass{
            Pass EnvCaptureOut{
            }
        }
    }
    Technology EnvSky{
        Sub_Pass{
            Pass EnvSkyOut{
            }
        }
    }
}
